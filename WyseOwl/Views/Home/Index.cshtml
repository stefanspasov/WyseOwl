@using WyseOwl.Models
@model CalculationsViewModel1.FirstCalculation
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbobg"></div>
<div class="jumbo">
    <h1>Student Loans Repayment Calculator UK</h1>
    <p class="lead">Use this quick and easy calculator to see how long it takes to pay off your student loan and whether you can make any savings. </p>
    <p class="lead">We don't store any of your information!</p>
</div>
<div class="row">
    <div class="col-md-12">
        <button type="button" class="btn btn-default" style="width: 100%; height: 30px" data-target="#calculationInputDiv" data-toggle="collapse" id="calculationInputButton">
            <span class="glyphicon glyphicon-resize-vertical"></span>
        </button>
    </div>
</div>
<div class="collapse in" id="calculationInputDiv">
    <section id="loginForm">
        @using (Ajax.BeginForm("Index", "Home", new AjaxOptions()
        {
            HttpMethod = "POST",
            //    UpdateTargetId = "Result",
            OnSuccess = "onSuccess",
            // OnBegin = "onBegin",
            //  OnComplete = "onComplete"
            //  LoadingElementId = "loader"
        }))
        {
                @*<div id="loader" class=" aletr" style="opacity:0.5; background: #000; width:100%;height:100%; z-index: 10;top:0; left:0; position: fixed; display: none">
                    Loading...<img src="~/Content/loader.gif" style="background: no-repeat scroll center #FFF; position: absolute; height: 100%; width: 100%;"/>
                </div>*@
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.Balance)
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Balance, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>
            <br/>

                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.SelectedAddressCountry)
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.SelectedAddressCountry, Model.AddressCountry, "-SELECT-", new { @class = "form-control", @id = "ddlAddressCountry" })
                        @Html.ValidationMessageFor(m => m.SelectedAddressCountry, "", new { @class = "text-danger" })
                    </div>
                </div>
            <br/>

            <div class="row">
                <div class="col-md-4 col-xs-12">
                    @Html.LabelFor(m => m.StartYear)
                </div>
                <div class="col-md-2 col-xs-6" style="padding-top: 10px;">
                    <div id="beginYearSlider"></div>
                </div>
                <div class="col-md-1 col-xs-4">
                    @Html.TextBoxFor(m => m.StartYear, new { @readonly = "readonly", @class = "form-control input-sm", @id = "beginYear" })
                </div>
                <div class="col-md-5">@Html.ValidationMessageFor(m => m.StartYear)</div>
            </div>
            <br />
            <div class="row" id="divPostgraduateLoan" style="display: none">
                <div class="col-md-4">
                    @Html.LabelFor(m => m.PostGraduateLoan)
                </div>
                <div class="col-md-2" style="padding-bottom: 25px;">
                    @Html.CheckBoxFor(m => m.PostGraduateLoan, new { @id = "cbPostgraduateLoan" })
                </div>
            </div>
            <div class="row" id="divEligibleYear" style="display: none">
                <div class="col-md-4 col-xs-12">
                    @Html.LabelFor(m => m.EligibleYear)
                </div>
                <div class="col-md-2 col-xs-6" style="padding-top: 10px;">
                    <div id="eligilbeYearSlider"></div>
                </div>
                <div class="col-md-1 col-xs-4" style="padding-bottom: 25px">
                    @Html.TextBoxFor(m => m.EligibleYear, new { @readonly = "readonly", @class = "form-control input-sm", @id = "eligibleYear" })
                </div>
                <div class="col-md-5">@Html.ValidationMessageFor(m => m.EligibleYear)</div>
            </div>
            <div class="row" id="divAge" style="display: none">
                <div class="col-md-4 col-xs-4">
                    @Html.LabelFor(m => m.Age)
                </div>
                <div class="col-md-2 col-xs-3" style="padding-bottom: 25px">
                    @Html.TextBoxFor(m => m.Age, new { @class = "form-control", @id = "tbAge" })
                    @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
                </div>
            </div>

                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.Paye)
                    </div>
                    <div class="col-md-2">
                        @Html.CheckBoxFor(m => m.Paye, new { @id = "cbPaye" })
                    </div>
                </div>

            <br/>
            <div class="row" style="display: none" id="divBulk">
                <div class="col-md-4 col-xs-4" style="padding-top: 5px">
                    @Html.LabelFor(m => m.bulk) &nbsp;
                </div>
                <div class="col-md-1 col-xs-3" style="padding-top: 5px">
                    @Html.TextBoxFor(m => m.bulk, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.bulk, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-xs-5" style="padding-top: 5px">
                    @Html.DropDownListFor(m => m.SelectedRepaymentsPer, Model.PerTime, new { @class = "form-control" })
                </div>
                <div class="col-md-2 col-xs-6" style="padding-top: 5px; padding-bottom: 25px">
                    @Html.DropDownListFor(m => m.curr_bulk, Model.Currency, new { @class = "form-control" })
                </div>
            </div>

                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(m => m.SelectedWorkCountry)
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.SelectedWorkCountry, Model.WorkCountry, new { @class = "form-control" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-md-4 col-xs-4">
                        @Html.LabelFor(m => m.GrossEarnings)
                    </div>
                    <div class="col-md-2 col-xs-3">
                        @Html.TextBoxFor(m => m.GrossEarnings, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.GrossEarnings, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2 col-xs-5">
                        @Html.DropDownListFor(m => m.SelectedGrossEarningsPer, Model.PerTime, new { @class = "form-control" })
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col-md-4 col-xs-4" style="padding-top: 5px">
                        @Html.LabelFor(m => m.Repayments) &nbsp;
                    </div>
                    <div class="col-md-1 col-xs-3" style="padding-top: 5px">
                        @Html.TextBoxFor(m => m.Repayments, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Repayments, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2 col-xs-5" style="padding-top: 5px">
                        @Html.DropDownListFor(m => m.SelectedRepaymentsPer, Model.PerTime, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2 col-xs-6" style="padding-top: 5px">
                        @Html.DropDownListFor(m => m.SelectedRepaymentsCurrency, Model.Currency, new { @class = "form-control" })
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-md-10 col-xs-12">
                        <input type="submit" value="Calculate" class="btn btn-info" style="width: 100%" />
                    </div>
                </div>
                }

</section>
</div>

<section id="sectionResults" style="display: none">
    <br />
    <br />
    <br />

    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            Your outstanding loan for this month is: &nbsp; 
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult1"></span></b></div>
    </div>
    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            Length of time until your loan is payed off: &nbsp; 
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult2"></span></b></div>
    </div>
    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            By paying off extra, you will save: &nbsp; 
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult3"></span></b></div>
    </div>
    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            Total amount spent on voluntary repayments: &nbsp; 
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult4"></span></b></div>
    </div>
    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            Equivalent monthly voluntary repayments: &nbsp; 
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult5"></span></b></div>
    </div>
    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            Equivalent to an interest rate of: &nbsp;
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult6"></span></b></div>
    </div>
    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            Your loan will be canceled in at most: &nbsp; 
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult7"></span></b></div>
    </div>
    <div class="row">
        <div class="col-md-8 col-xs-8" style="padding-top: 5px">
            Your loan type: &nbsp; 
        </div>
        <div class="col-md-4 col-xs-4"><b><span id="spanResult8"></span></b></div>
    </div>
</section>


<div id="divRecalc" style="display: none">
    <section>
        @using (Ajax.BeginForm("Recalculate", "Home", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onSuccessRecalc", }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-4 col-xs-4" style="padding-top: 5px">
                    @Html.LabelFor(m => m.CalculationResult.RecalcRepayment) &nbsp;
                </div>
                <div class="col-md-1 col-xs-3" style="padding-top: 5px">
                    @Html.TextBoxFor(m => m.CalculationResult.RecalcRepayment, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CalculationResult.RecalcRepayment, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-xs-5" style="padding-top: 5px">
                    @Html.DropDownListFor(m => m.CalculationResult.RecalcRepaymentPer, Model.PerTime, "-SELECT-", new { @class = "form-control" })
                </div>
                <div class="col-md-2 col-xs-6" style="padding-top: 5px">
                    @Html.DropDownListFor(m => m.CalculationResult.RecalcRepaymentCurrency, Model.Currency, "-SELECT-", new { @class = "form-control" })
                </div>
            </div>
            <br/>
            <div class="row">
                <div class="col-md-4 col-xs-4">
                    @Html.LabelFor(m => m.CalculationResult.RecalcOneTime)
                </div>
                <div class="col-md-2 col-xs-3">
                    @Html.TextBoxFor(m => m.CalculationResult.RecalcOneTime, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CalculationResult.RecalcOneTime, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-xs-5">
                    @Html.DropDownListFor(m => m.CalculationResult.RecalcOneTimeCurrency, Model.Currency, "-SELECT-", new { @class = "form-control" })
                </div>
            </div>

            @Html.HiddenFor(m=>m.CalculationResult.LoanType, new { @id="prevResultLoanType"})
            @Html.HiddenFor(m=>m.CalculationResult.PrevResultGef, new { @id= "PrevResultGef" })
            @Html.HiddenFor(m=>m.CalculationResult.PrevResultLet_p1, new { @id= "PrevResultLet_p1" })
            @Html.HiddenFor(m=>m.CalculationResult.PrevResultLet_p2, new { @id= "PrevResultLet_p2" })
            @Html.HiddenFor(m=>m.CalculationResult.PrevResultTdn, new { @id= "PrevResultTdn" })

            @Html.HiddenFor(m=>m.CalculationResult.PrevResultUet, new { @id= "PrevResultUet" })
            @Html.HiddenFor(m=>m.CalculationResult.PrevResultRl, new { @id= "PrevResultRl" })
            @Html.HiddenFor(m=>m.CalculationResult.PrevResultCancel, new { @id= "PrevResultCancel" })

            @Html.HiddenFor(m=>m.CalculationResult.PrevResultJ1, new { @id= "PrevResultJ1" })
            @Html.HiddenFor(m=>m.CalculationResult.PrevResultLet_pl, new { @id= "PrevResultLet_pl" })

            <div class="row">
                <div class="col-md-10 col-xs-12">
                    <input type="submit" value="Recalculate" class="btn btn-info" style="width: 100%" />
                </div>
            </div>
        }
    </section>
</div>

<style>
    .jumbobg {
          background: url('https://dvyvvujm9h0uq.cloudfront.net/images/pixpa-inner-banner.jpg') no-repeat center center;
          position: fixed;
          width: 100%;
          height: 350px; 
          top:0;
          left:0;
          z-index: -1;
    }

    .jumbo {
        height: 350px;
          color: white;
          text-shadow: #444 0 1px 1px;
          background:transparent;
    }
</style>

@section Scripts {
    <script>
        
        var jumboHeight = $('.jumbo').outerHeight();
        function parallax() {
            var scrolled = $(window).scrollTop();
            $('.jumbobg').css('height', (jumboHeight - scrolled) + 'px');
        }

        $(window).scroll(function (e) {
            parallax();
        });


        //# sourceURL=dynamicScript.js
        function onSuccess(data) {
            $("#calculationInputButton").click();
            $("#sectionResults").css({ 'display': "block" });
            $("#spanResult1").text(data.result.OutstandingLoan);
            $("#spanResult2").text(data.result.LengthUntillPaidOff);
            $("#spanResult3").text(data.result.YouSave);
            $("#spanResult4").text(data.result.TotalAmountRepayments);
            $("#spanResult5").text(data.result.MonthlyRepayments);
            $("#spanResult6").text(data.result.InterestRate);
            $("#spanResult7").text(data.result.CancelledIn);
            $("#spanResult8").text(data.result.LoanType);

            $("#prevResultLoanType").val(data.result.LoanType);

            $("#PrevResultGef").val(data.result.PrevResultGef);
            $("#PrevResultTdn").val(data.result.PrevResultTdn);
            $("#PrevResultLet_p1").val(data.result.PrevResultLet_p1);
            $("#PrevResultLet_p2").val(data.result.PrevResultLet_p2);

            $("#PrevResultUet").val(data.result.PrevResultUet);
            $("#PrevResultRl").val(data.result.PrevResultRl);
            $("#PrevResultCancel").val(data.result.PrevResultCancel);
            $("#PrevResultJ1").val(data.result.PrevResultJ1);
            $("#PrevResultLet_pl").val(data.result.PrevResultLet_pl);

            $("#divRecalc").show("slow");

        }

        function onSuccessRecalc(data) {
            // $("#spanResult1").text(data.result.OutstandingLoan);

            $("#spanResult2").text(data.result.LengthUntillPaidOff);
            $("#spanResult3").text(data.result.YouSave);
            $("#spanResult4").text(data.result.TotalAmountRepayments);
            $("#spanResult5").text(data.result.MonthlyRepayments);
            $("#spanResult6").text(data.result.InterestRate);

            //  $("#spanResult7").text(data.result.CancelledIn);
            //  $("#spanResult8").text(data.result.LoanType);
        }

        $(function () {
            $("#beginYearSlider").slider({
                range: "max",
                min: 1998,
                max: 2017,
                value: $("#beginYear").val(),
                slide: function (event, ui) {
                    $("#beginYear").val(ui.value);
                    showOrHidePostGraduateLoan();
                    showOrHideAgeAndEligibleYear();
                }
            });

            $("#eligilbeYearSlider").slider({
                range: "max",
                min: 2006,
                max: 2017,
                value: $("#eligibleYear").val(),
                slide: function (event, ui) {
                    $("#eligibleYear").val(ui.value);
                }
            });

            $("#cbPaye").switchButton(
            {
                on_label: "Yes",
                off_label: "No"
            });

            $('#cbPaye').change(function () {
                if (this.checked) {
                    $('#divBulk').show();
                } else {
                    $('#divBulk').hide();
                }
            });

            $("#cbPostgraduateLoan").switchButton(
            {
                on_label: "Yes",
                off_label: "No"
            });

            $("#tbAge").mask("99/9999", { placeholder: "mm/yyyy" });
        });

        $("#ddlAddressCountry").change(showOrHidePostGraduateLoan);
        $("#ddlAddressCountry").change(showOrHideAgeAndEligibleYear);


        function showOrHidePostGraduateLoan() {
            if ($('#ddlAddressCountry').val() === "England" && parseInt($("#beginYear").val()) > 2012) {
                $('#divPostgraduateLoan').show();
            } else {
                $('#divPostgraduateLoan').hide();
            }
        };

        function showOrHideAgeAndEligibleYear() {
            var isAgeCondition1 = ['England', 'North Ireland', 'Wales'].indexOf($('#ddlAddressCountry').val()) > -1 && parseInt($("#beginYear").val()) < 2006;
            var isAgeCondition2 = $('#ddlAddressCountry').val() === "Scotland" && parseInt($("#beginYear").val()) < 2007;
            if (isAgeCondition1 || isAgeCondition2) {
                $('#divAge').show();
                $('#divAge').prop('required', true);
                $('#divEligibleYear').hide();
            } else {
                $('#divEligibleYear').show();
                $('#divAge').hide();
                $('#divAge').prop('required', false);
            }

            if ($('#ddlAddressCountry').val() === '-SELECT-') {
                $('#divEligibleYear').hide();
                $('#divAge').hide();
                $('#divAge').prop('required', false);
            }
        };

    </script>
}
